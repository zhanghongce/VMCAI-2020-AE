#include <boost/multiprecision/cpp_int.hpp>
using namespace boost::multiprecision;
typedef number<cpp_int_backend<2, 2, unsigned_magnitude, unchecked, void> > uint2_t;
typedef number<cpp_int_backend<4, 4, unsigned_magnitude, unchecked, void> > uint4_t;
typedef number<cpp_int_backend<24, 24, unsigned_magnitude, unchecked, void> > uint24_t;
typedef number<cpp_int_backend<40, 40, unsigned_magnitude, unchecked, void> > uint40_t;
typedef number<cpp_int_backend<48, 48, unsigned_magnitude, unchecked, void> > uint48_t;
typedef number<cpp_int_backend<56, 56, unsigned_magnitude, unchecked, void> > uint56_t;
typedef number<cpp_int_backend<72, 72, unsigned_magnitude, unchecked, void> > uint72_t;
typedef number<cpp_int_backend<80, 80, unsigned_magnitude, unchecked, void> > uint80_t;
typedef number<cpp_int_backend<88, 88, unsigned_magnitude, unchecked, void> > uint88_t;
typedef number<cpp_int_backend<96, 96, unsigned_magnitude, unchecked, void> > uint96_t;
typedef number<cpp_int_backend<104, 104, unsigned_magnitude, unchecked, void> > uint104_t;
typedef number<cpp_int_backend<112, 112, unsigned_magnitude, unchecked, void> > uint112_t;
typedef number<cpp_int_backend<120, 120, unsigned_magnitude, unchecked, void> > uint120_t;
#include <map>
class TEST {
public:
  uint2_t TEST_cmd;
  uint16_t TEST_cmdaddr;
  uint8_t TEST_cmddata;
  bool TEST_cmdflag;
  uint2_t TEST_status;
  uint16_t TEST_address;
  uint16_t TEST_length;
  uint128_t TEST_counter;
  uint8_t TEST_XRAM[65536];
  bool TEST_flag;
  std::map<uint32_t, uint32_t>TEST_big_ram;
  uint128_t ENCRYPT_rd_data;
  uint128_t ENCRYPT_enc_data;
  uint4_t ENCRYPT_byte_cnt;
  uint16_t ENCRYPT_blk_cnt;
  void init_ENCRYPT();
  bool c_813;
  bool c_815;
  bool decode_TEST_WRITE_ADDRESS();
  bool c_734;
  bool c_730;
  bool c_736;
  bool c_759;
  bool c_752;
  bool c_754;
  bool c_756;
  bool c_761;
  bool c_748;
  bool c_762;
  bool decode_TEST_START_ENCRYPT();
  bool c_796;
  bool c_792;
  bool c_798;
  bool c_788;
  bool c_799;
  bool decode_ENCRYPT_LOAD();
  bool c_835;
  bool decode_ENCRYPT_ENC();
  bool c_1110;
  bool c_1106;
  bool c_1112;
  bool decode_ENCRYPT_STORE();
  bool c_1134;
  uint16_t decode_TEST_WRITE_ADDRESS_update_TEST_address();
  bool c_739;
  bool c_774;
  uint8_t c_770;
  uint8_t c_776;
  bool c_767;
  uint8_t c_763;
  uint8_t c_769;
  uint16_t c_781;
  uint16_t c_783;
  bool decode_TEST_WRITE_ADDRESS_update_TEST_flag();
  bool c_784;
  uint2_t decode_TEST_START_ENCRYPT_update_TEST_status();
  uint2_t unknown0();
  uint2_t c_802;
  uint2_t c_805;
  uint4_t decode_ENCRYPT_LOAD_update_ENCRYPT_byte_cnt();
  uint4_t c_839;
  uint128_t decode_ENCRYPT_LOAD_update_ENCRYPT_rd_data();
  uint4_t c_1084;
  bool c_1087;
  uint16_t c_842;
  uint16_t c_840;
  uint16_t c_843;
  uint8_t c_844;
  uint8_t c_1080;
  uint8_t c_1089;
  uint4_t c_1068;
  bool c_1071;
  uint8_t c_1064;
  uint8_t c_1073;
  uint4_t c_1052;
  bool c_1055;
  uint8_t c_1048;
  uint8_t c_1057;
  uint4_t c_1036;
  bool c_1039;
  uint8_t c_1032;
  uint8_t c_1041;
  uint4_t c_1020;
  bool c_1023;
  uint8_t c_1016;
  uint8_t c_1025;
  uint4_t c_1004;
  bool c_1007;
  uint8_t c_1000;
  uint8_t c_1009;
  uint4_t c_988;
  bool c_991;
  uint8_t c_984;
  uint8_t c_993;
  uint4_t c_972;
  bool c_975;
  uint8_t c_968;
  uint8_t c_977;
  uint4_t c_956;
  bool c_959;
  uint8_t c_952;
  uint8_t c_961;
  uint4_t c_940;
  bool c_943;
  uint8_t c_936;
  uint8_t c_945;
  uint4_t c_924;
  bool c_927;
  uint8_t c_920;
  uint8_t c_929;
  uint4_t c_908;
  bool c_911;
  uint8_t c_904;
  uint8_t c_913;
  uint4_t c_892;
  bool c_895;
  uint8_t c_888;
  uint8_t c_897;
  uint4_t c_876;
  bool c_879;
  uint8_t c_872;
  uint8_t c_881;
  uint4_t c_860;
  bool c_863;
  uint8_t c_856;
  uint8_t c_865;
  uint4_t c_850;
  bool c_853;
  uint8_t c_846;
  uint8_t c_855;
  uint16_t c_870;
  uint24_t c_886;
  uint32_t c_902;
  uint40_t c_918;
  uint48_t c_934;
  uint56_t c_950;
  uint64_t c_966;
  uint72_t c_982;
  uint80_t c_998;
  uint88_t c_1014;
  uint96_t c_1030;
  uint104_t c_1046;
  uint112_t c_1062;
  uint120_t c_1078;
  uint128_t c_1094;
  uint2_t decode_ENCRYPT_LOAD_update_TEST_status();
  bool c_1100;
  uint2_t c_1102;
  uint128_t decode_ENCRYPT_ENC_update_ENCRYPT_enc_data();
  const uint128_t c_1114[16] = {0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  uint128_t c_1122;
  uint128_t c_1124;
  uint128_t c_1118;
  uint128_t c_1125;
  uint128_t c_1116;
  uint128_t c_1126;
  uint128_t process128(uint128_t arg_0, uint128_t arg_1);
  uint128_t c_1127;
  uint128_t c_1128;
  uint2_t decode_ENCRYPT_ENC_update_TEST_status();
  void ite_1296(std::map<int, int>& mem_update_map);
  uint16_t c_1138;
  uint16_t c_1136;
  uint16_t c_1139;
  uint4_t c_1289;
  bool c_1292;
  uint8_t c_1285;
  uint4_t c_1279;
  bool c_1282;
  uint8_t c_1275;
  uint4_t c_1269;
  bool c_1272;
  uint8_t c_1265;
  uint4_t c_1259;
  bool c_1262;
  uint8_t c_1255;
  uint4_t c_1249;
  bool c_1252;
  uint8_t c_1245;
  uint4_t c_1239;
  bool c_1242;
  uint8_t c_1235;
  uint4_t c_1229;
  bool c_1232;
  uint8_t c_1225;
  uint4_t c_1219;
  bool c_1222;
  uint8_t c_1215;
  uint4_t c_1209;
  bool c_1212;
  uint8_t c_1205;
  uint4_t c_1199;
  bool c_1202;
  uint8_t c_1195;
  uint4_t c_1189;
  bool c_1192;
  uint8_t c_1185;
  uint4_t c_1179;
  bool c_1182;
  uint8_t c_1175;
  uint4_t c_1169;
  bool c_1172;
  uint8_t c_1165;
  uint4_t c_1159;
  bool c_1162;
  uint8_t c_1155;
  uint4_t c_1149;
  bool c_1152;
  uint8_t c_1145;
  uint8_t c_1143;
  uint8_t c_1154;
  uint8_t c_1164;
  uint8_t c_1174;
  uint8_t c_1184;
  uint8_t c_1194;
  uint8_t c_1204;
  uint8_t c_1214;
  uint8_t c_1224;
  uint8_t c_1234;
  uint8_t c_1244;
  uint8_t c_1254;
  uint8_t c_1264;
  uint8_t c_1274;
  uint8_t c_1284;
  uint8_t c_1294;
  std::map<int, int> decode_ENCRYPT_STORE_update_TEST_XRAM_map;
  void decode_ENCRYPT_STORE_update_TEST_XRAM(std::map<int, int>& mem_update_map);
  uint16_t decode_ENCRYPT_STORE_update_ENCRYPT_blk_cnt();
  bool c_1308;
  uint16_t c_1302;
  bool c_1303;
  uint16_t c_1299;
  uint16_t c_1305;
  uint16_t c_1310;
  uint4_t decode_ENCRYPT_STORE_update_ENCRYPT_byte_cnt();
  uint4_t c_1142;
  uint2_t decode_ENCRYPT_STORE_update_TEST_status();
  bool c_1323;
  uint16_t c_1317;
  bool c_1318;
  uint2_t c_1320;
  uint2_t c_1325;
  void compute();
};
